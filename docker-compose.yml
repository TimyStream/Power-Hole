version: "3.9"

services:

  powerhole_pdns_auth_db:
    image: postgres:13
    container_name: powerhole_pdns_auth_db
    hostname: powerhole_pdns_auth_db
    restart: always
    mem_limit: "100M"
    networks:
      - powerhole_pdns_auth_db
    environment:
      POSTGRES_DB: powerhole
      POSTGRES_USER: powerhole
      POSTGRES_PASSWORD_FILE: /run/secrets/db_passwd
    volumes:
      - db_auth:/var/lib/postgresql/data
      - ./authoritative/init.sql:/docker-entrypoint-initdb.d/init.sql
    secrets:
      - db_passwd
    user: postgres:postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U pdns" ]
      interval: 10s
      timeout: 5s
      retries: 10
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges

  powerhole_pdns_authoritative:
    build:
      context: authoritative
      args:
        LOG_LEVEL: 6  # 3 - 6 (https://doc.powerdns.com/authoritative/settings.html#loglevel)
    image: powerhole:authoritative
    container_name: powerhole_pdns_authoritative
    hostname: powerhole_pdns_authoritative
    restart: always
    mem_limit: "100M"
    networks:
      powerhole_pdns_auth_db:
      powerhole_pdns_admin:
      powerhole_pdns_authoritative:
        ipv4_address: "172.26.0.122"
    depends_on:
      powerhole_pdns_auth_db:
        condition: service_healthy
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges

  powerhole_pdns_admin_db:
    image: postgres:13
    container_name: powerhole_pdns_admin_db
    hostname: powerhole_pdns_admin_db
    restart: always
    mem_limit: "100M"
    networks:
      - powerhole_pdns_admin_db
    environment:
      POSTGRES_DB: powerhole_admin
      POSTGRES_USER: powerhole_admin
      POSTGRES_PASSWORD_FILE: /run/secrets/admin_db_password
    volumes:
      - db_admin:/var/lib/postgresql/data
    secrets:
      - admin_db_password
    user: postgres:postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U pdns_admin" ]
      interval: 10s
      timeout: 5s
      retries: 10
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges

  powerhole_pdns_admin:
    image: powerhole:admin
    container_name: powerhole_pdns_admin
    hostname: powerhole_pdns_admin
    restart: always
    mem_limit: "200M"
    networks:
      - powerhole_pdns_admin_db
      - powerhole_pdns_admin
      - powerhole_nginx_admin
    environment:
      - SECRET_KEY_FILE=/run/secrets/pdns_admin_secret_key
      - SQLALCHEMY_DATABASE_URI_FILE=/run/secrets/db_uri
      - GUNICORN_TIMEOUT=60
      - GUNICORN_WORKERS=1
    secrets:
      - pdns_admin_secret_key
      - db_uri
    depends_on:
      powerhole_pdns_admin_db:
        condition: service_healthy
      powerhole_pdns_authoritative:
        condition: service_healthy
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    security_opt:
      - no-new-privileges

  powerhole_pdns_recursor:
    build:
      context: recursor
      args:
        LOG_LEVEL: 9  # 0 - 9 (https://doc.powerdns.com/recursor/settings.html#loglevel)
    image: powerhole:recursor
    container_name: powerhole_pdns_recursor
    hostname: powerhole_pdns_recursor
    restart: always
    mem_limit: "50M"
    init: true
    networks:
      powerhole_pdns_recursor:
        ipv4_address: "172.26.0.114"
    depends_on:
      powerhole_pdns_authoritative:
        condition: service_healthy
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges

  powerhole_pdns_forwarder:
    build: forwarder
    image: powerhole:forwarder
    container_name: powerhole_pdns_forwarder
    hostname: powerhole_pdns_forwarder
    restart: always
    mem_limit: "50M"
    init: true
    networks:
      powerhole_pdns_authoritative:
      powerhole_pdns_recursor:
      powerhole_pdns_forwarder:
        ipv4_address: "172.26.0.130"
    depends_on:
      powerhole_pdns_authoritative:
        condition: service_healthy
      powerhole_pdns_recursor:
        condition: service_healthy
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges

  powerhole_pihole:
    image: pihole/pihole
    container_name: powerhole_pihole
    hostname: powerhole_pihole
    restart: always
    mem_limit: "50M"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    networks:
      - powerhole_pdns_forwarder
      - powerhole_nginx_pihole
    environment:
      - TZ=Europe/Amsterdam
      - PIHOLE_DNS_=172.26.0.130
      - DNSMASQ_LISTENING=all
      - DNS_BOGUS_PRIV=false # Forward private reverse lookups
    volumes:
      - pihole:/etc/pihole/
      - dnsmasq:/etc/dnsmasq.d/
    depends_on:
      powerhole_pdns_forwarder:
        condition: service_healthy
    cap_drop:
      - ALL
    cap_add:
      - AUDIT_WRITE
      - CHOWN
      - DAC_OVERRIDE
      - FOWNER
      - KILL
      - SETGID
      - SETUID
      - SETFCAP

  powerhole_nginx:
    image: nginxinc/nginx-unprivileged:1.25.4
    container_name: powerhole_nginx
    hostname: powerhole_nginx
    restart: always
    mem_limit: "50M"
    ports:
      - "80:8080"
      - "443:44380"
    networks:
      - powerhole_nginx_admin
      - powerhole_nginx_pihole
    volumes:
      - type: bind
        source: ./nginx/nginx.conf
        target: /etc/nginx/nginx.conf
      - type: bind
        source: ./nginx/admin.conf
        target: /etc/nginx/conf.d/default.conf
      - type: bind
        source: ./nginx/pihole.conf
        target: /etc/nginx/conf.d/pihole.conf
    secrets:
      - source: certificate
        target: /srv/ssl/fullchain.pem
      - source: private_key
        target: /srv/ssl/privkey.pem
      - source: dh_params
        target: /srv/ssl/dhparams.pem
    depends_on:
      powerhole_pdns_admin:
        condition: service_healthy
      powerhole_pihole:
        condition: service_healthy
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges

volumes:
  db_auth:
  db_admin:
  pihole:
  dnsmasq:

secrets:

  db_passwd:
    file: ./secrets/db_password.txt

  pdns_admin_secret_key:
    file: ./secrets/pdns_admin_secret_key.txt

  admin_db_password:
    file: ./secrets/admin_db_password.txt

  db_uri:
    file: ./secrets/db_uri.txt

  certificate:
    file: ./secrets/ssl/fullchain.pem

  private_key:
    file: ./secrets/ssl/privkey.pem

  dh_params:
    file: ./secrets/ssl/dhparams.pem

networks:

  powerhole_pdns_auth_db:
    name: powerhole_pdns_auth_db
    internal: true
    ipam:
      driver: default
      config:
        - subnet: "172.26.0.88/29"
    driver_opts:
      com.docker.network.bridge.name: dbr-ph_auth_db

  powerhole_pdns_admin_db:
    name: powerhole_pdns_admin_db
    internal: true
    ipam:
      driver: default
      config:
        - subnet: "172.26.0.96/29"
    driver_opts:
      com.docker.network.bridge.name: dbr-ph_admin_db

  powerhole_pdns_admin:
    name: powerhole_pdns_admin
    internal: true
    ipam:
      driver: default
      config:
        - subnet: "172.26.0.104/29"
    driver_opts:
      com.docker.network.bridge.name: dbr-ph_admin

  powerhole_pdns_recursor:
    name: powerhole_pdns_recursor
    ipam:
      driver: default
      config:
        - subnet: "172.26.0.112/29"
    driver_opts:
      com.docker.network.bridge.name: dbr-ph_rec

  powerhole_pdns_authoritative:
    name: powerhole_pdns_authoritative
    internal: true
    ipam:
      driver: default
      config:
        - subnet: "172.26.0.120/29"
    driver_opts:
      com.docker.network.bridge.name: dbr-ph_auth

  powerhole_pdns_forwarder:
    name: powerhole_pdns_forwarder
    ipam:
      driver: default
      config:
        - subnet: "172.26.0.128/29"
    driver_opts:
      com.docker.network.bridge.name: dbr-ph_fwd

  powerhole_nginx_admin:
    name: powerhole_nginx_admin
    ipam:
      driver: default
      config:
        - subnet: "172.26.0.136/29"
    driver_opts:
      com.docker.network.bridge.name: dbr-ph_ng_admin

  powerhole_nginx_pihole:
    name: powerhole_nginx_pihole
    ipam:
      driver: default
      config:
        - subnet: "172.26.0.144/29"
    driver_opts:
      com.docker.network.bridge.name: dbr-ph_ng_hole
